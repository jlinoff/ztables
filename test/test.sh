#!/bin/bash
#
# Test cmpds.py using data generated by gends.py.
#

# ================================================================
#
# Functions
#
# ================================================================
function passed_fct() {
    local tid="$1"
    local ctxt=($(caller 0))
    local ln=$(( ${ctxt[0]} - 2 ))
    (( Total++ ))
    (( Passed++ ))
    printf 'test:%02d:%03d: passed - %s\n' $Total $ln "$tid"
}

function failed_fct() {
    local tid="$1"
    local ctxt=($(caller 0))
    local ln=$(( ${ctxt[0]} - 4 ))
    (( Total++ ))
    (( Failed++ ))
    printf 'test:%02d:%03d: failed - %s\n' $Total $ln "$tid"
}

# ================================================================
# Main.
# ================================================================
Passed=0
Failed=0
Total=0
Put=../ztables.py

# Test 1. Generate the SND table. 
tid='SND table'
printf '\n*** test %s\n' "$tid"
$Put -s >&1 | tee $$.tmp
if diff test01.ok $$.tmp ; then
    passed_fct "$tid"
else
    failed_fct "$tid"
    cat $$.tmp
fi
rm -f $$.tmp

# Test 2. Generate the z-value for SND, 95%.
tid='z-value for SND, 95%'
printf '\n*** test %s\n' "$tid"
$Put -p 0.95 -s >&1 | tee $$.tmp
if diff test02.ok $$.tmp ; then
    passed_fct "$tid"
else
    failed_fct "$tid"
    cat $$.tmp
fi
rm -f $$.tmp

# Test 3. Check percent handling output.
tid='percent handling%'
printf '\n*** test %s\n' "$tid"
$Put -p 90,95,98,99 -s >&1 | tee $$.tmp
if diff test03.ok $$.tmp ; then
    passed_fct "$tid"
else
    failed_fct "$tid"
    cat $$.tmp
fi
rm -f $$.tmp

# Test 4. Check brief output.
tid='brief output%'
printf '\n*** test %s\n' "$tid"
$Put -p 90,95,98,99 -b -s >&1 | tee $$.tmp
if diff test04.ok $$.tmp ; then
    passed_fct "$tid"
else
    failed_fct "$tid"
    cat $$.tmp
fi
rm -f $$.tmp


# Summary:
echo
printf "test:summary passed %2d\n" $Passed
printf "test:summary failed %2d\n" $Failed
printf "test:summary total  %2d\n" $Total

if (( $Failed )) ; then
    echo "FAILED"
else
    echo "PASSED"
fi
exit $Failed

